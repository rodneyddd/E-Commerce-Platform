{"ast":null,"code":"var _jsxFileName = \"/Users/rodneydaniel/git/E-Commerce-Platform/src/Components/IceCream/IceCream.js\",\n  _s = $RefreshSig$();\nimport \"./IceCream.css\";\nimport React, { useState, useEffect } from 'react';\nimport Navbar from \"../Navbar/Navbar\";\nimport Cart from \"../Cart/Cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction IceCream() {\n  _s();\n  const [selectedFlavors, setSelectedFlavors] = useState([]);\n  const flavors = [{\n    name: 'Vanilla',\n    src: '../../../assets/vanilla.jpeg',\n    imageClass: 'imv',\n    textClass: 'image-textv'\n  }, {\n    name: 'Chocolate',\n    src: './assets/chocolate.jpeg',\n    imageClass: 'imchoco',\n    textClass: 'image-textcho'\n  }, {\n    name: 'Strawberry',\n    src: '/assets/strawberry.jpeg',\n    imageClass: 'imstraw',\n    textClass: 'image-textstraw'\n  }, {\n    name: 'Rocky Road',\n    src: '../assets/rockyroad.jpeg',\n    imageClass: 'imRR',\n    textClass: 'image-textRR'\n  }, {\n    name: 'Cookies & Cream',\n    src: '../assets/cookiescream.jpeg',\n    imageClass: 'imCCr',\n    textClass: 'image-textCCr'\n  }, {\n    name: 'Cookie Dough',\n    src: '../../assets/cookiedough.jpeg',\n    imageClass: 'imCD',\n    textClass: 'image-textCD'\n  }, {\n    name: 'Dulce de Leche',\n    src: '/assets/dulce.jpeg',\n    imageClass: 'imDDL',\n    textClass: 'image-textDDL'\n  }, {\n    name: 'Caramel Cone',\n    src: '/assets/CaraCone.jpeg',\n    imageClass: 'imCC',\n    textClass: 'image-textCC'\n  }, {\n    name: 'Pralines & Cream',\n    src: '/assets/Praline.jpeg',\n    imageClass: 'imPnC',\n    textClass: 'image-textPnC'\n  }, {\n    name: 'Mint Chip',\n    src: '/assets/mint.jpeg',\n    imageClass: 'imMC',\n    textClass: 'image-textMC'\n  }, {\n    name: 'Midnight Cookies & Cream',\n    src: '/assets/Midnight.jpeg',\n    imageClass: 'imMCC',\n    textClass: 'image-textMCC'\n  }, {\n    name: 'Belgian Chocolate',\n    src: '/assets/belgianchoco.jpeg',\n    imageClass: 'imBC',\n    textClass: 'image-textBC'\n  }, {\n    name: 'Brownies A La Mode',\n    src: '/assets/brownie.jpeg',\n    imageClass: 'imBALM',\n    textClass: 'image-textBALM'\n  }, {\n    name: 'Butter Pecan',\n    src: '/assets/butterpecan.jpeg',\n    imageClass: 'imBP',\n    textClass: 'image-textBP'\n  }, {\n    name: 'Vanilla Swiss Almond',\n    src: '/assets/VanillaSA.jpeg',\n    imageClass: 'imVSA',\n    textClass: 'image-textVSA'\n  }, {\n    name: 'Coffee',\n    src: '/assets/coffee.jpeg',\n    imageClass: 'imCoff',\n    textClass: 'image-textCoff'\n  }, {\n    name: 'Coffee Chip',\n    src: '/assets/coffeechip.jpeg',\n    imageClass: 'imCoffChip',\n    textClass: 'image-textCoffChip'\n  }, {\n    name: 'Pineapple Coconut',\n    src: 'pineapplecoco.jpeg',\n    imageClass: 'imPC',\n    textClass: 'image-textPC'\n  }, {\n    name: 'Irish Cream Brownie',\n    src: 'irishcream.png',\n    imageClass: 'imICB',\n    textClass: 'image-textICB'\n  }, {\n    name: 'Vanilla Chocolate Chip',\n    src: 'vanillachocochip.jpeg',\n    imageClass: 'imVCC',\n    textClass: 'image-textVCC'\n  }, {\n    name: 'Rum Raisin',\n    src: 'rumraisin.jpeg',\n    imageClass: 'imRumR',\n    textClass: 'image-textRumR'\n  }, {\n    name: 'Pistachio',\n    src: 'pistachio.jpeg',\n    imageClass: 'imPist',\n    textClass: 'image-textPist'\n  }, {\n    name: 'Chocolate Peanut Butter Pretzel',\n    src: 'CPBP.png',\n    imageClass: 'imCPBP',\n    textClass: 'image-textCPBP'\n  }, {\n    name: 'White Chocolate Raspberry',\n    src: 'WCR.jpeg',\n    imageClass: 'imWCR',\n    textClass: 'image-textWCR'\n  }, {\n    name: 'Sea Salt Caramel Truffle',\n    src: 'IMG-0505.JPG',\n    imageClass: 'imSSCT',\n    textClass: 'image-textSSCT'\n  }];\n  const [selectedFlavorsTop, setSelectedFlavorsTop] = useState(0);\n  useEffect(() => {\n    const selectedFlavorsBox = document.getElementById(\"selected-flavors\"); //gets id of selected flavor\n    const slideTop = document.querySelector(\".icparallax-2\").offsetTop;\n    //.offsetTop is a property that returns the distance from the top of the element's parent container to the top of the element itself.\n    //The result of this line is stored in the slideTop variable, \n    //representing the vertical position of the top of the second parallax section.\n    const maxTop = slideTop + document.querySelector(\".icparallax-2\").clientHeight - selectedFlavorsBox.clientHeight;\n    //clientheight is the height of the parallax 2 section\n    //so when you subtract it by the height of the boxes.height\n    //you get the maximum scroll position\n\n    //functions in javascript often have constant variables assigned to them instead \n    const handleScroll = () => {\n      const scrollTop = window.scrollY;\n      //current scroll position of the user\n      if (scrollTop >= slideTop && scrollTop <= maxTop)\n        // checks if the user's scroll position is within the section where you want the selected flavors box to move.\n        {\n          //If the scroll position is within the desired range, this line updates the selectedFlavorsTop state variable.\n          //The value being set is the difference between the current scroll position (scrollTop) \n          //and the starting position of the parallax section (slideTop).\n          setSelectedFlavorsTop(scrollTop - slideTop); //\n        }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll); //when the user scrolls the above thing will happen\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll); //preventing memory leaks\n    };\n  }, []);\n  const toggleFlavor = flavorName => {\n    const index = selectedFlavors.indexOf(flavorName);\n    // getting the index of the clicked flavor in the selectedFlavors array\n    if (index === -1)\n      //if the flavor is not already selected, because its not in the array yet\n      {\n        if (selectedFlavors.length < 2) {\n          setSelectedFlavors(prevSelectedFlavors => [...prevSelectedFlavors, flavorName]);\n          //creates a new array that includes the previous selected flavors and the newly selected flavor.\n        } else {\n          // Show a message saying the user can't select more than two flavors\n          alert(\"You can only select up to two flavors.\");\n        }\n      } else {\n      setSelectedFlavors(prevSelectedFlavors => prevSelectedFlavors.filter(flavor => flavor !== flavorName));\n      //the .filter() makes a new array, \n      // (flavor => flavor !== flavorName) checks if each flavor is not equal to flavorName.\n    }\n    //this else makes the flavor get unclicked\n  };\n\n  const confirmSelection = (updateCartItemCount, openCart) => {\n    if (selectedFlavors.length === 0) {\n      alert(\"You need to select at least one flavor.\");\n    } else if (selectedFlavors.length === 1) {\n      if (window.confirm(\"Are you sure you only want one flavor?\")) {\n        // Perform any necessary actions for one flavor selection\n      }\n    } else if (selectedFlavors.length === 2) {\n      if (window.confirm(\"Are you sure you want these two flavors?\")) {\n        // Perform any necessary actions for two flavor selection\n      }\n    }\n\n    // Update the cart count\n    updateCartItemCount(selectedFlavors.length);\n\n    // Open the cart when a selection is confirmed\n    openCart();\n  };\n\n  //The window.confirm method is a built-in JavaScript function\n  // that displays a confirmation dialog box with a message and two buttons: \"OK\" and \"Cancel.\"\n\n  const clearSelection = () => {\n    setSelectedFlavors([]); // Clear the selected flavors array\n  };\n\n  // State to track the number of items in the cart\n  const [cartItemCount, setCartItemCount] = useState(0);\n\n  // updating cart count\n  const updateCartItemCount = count => {\n    setCartItemCount(count);\n  };\n  const [isCartOpen, setIsCartOpen] = useState(false); // State to manage cart visibility\n\n  const openCart = () => {\n    setIsCartOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"icparallax-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"icparallax-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"We have many different flavors to choose from!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Click on a flavor to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"(Unclick to remove them)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"icparallax-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"image-grid\",\n        children: flavors.map((flavor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-with-text\",\n          onClick: () => toggleFlavor(flavor.name),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: flavor.src,\n            className: flavor.imageClass,\n            alt: `Image of ${flavor.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: flavor.textClass,\n            children: flavor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"selected-flavors\",\n        style: {\n          top: `${selectedFlavorsTop}px`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Selected Flavors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"flavor-list\",\n          children: selectedFlavors.map((flavor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: flavor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"confirm-button\",\n          onClick: () => confirmSelection(updateCartItemCount, openCart),\n          children: \"Confirm Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"clear-button\",\n          onClick: clearSelection,\n          children: \"Clear All Flavors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), isCartOpen && /*#__PURE__*/_jsxDEV(Cart, {\n        itemCount: cartItemCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"icparallax-last\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"icpara3-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Contact Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Address: 1306 2nd Avenue, Manhattan, New York\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email: info@haagendazs.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Phone: +1 (646) 484 5897\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Opening Hours: Mon-Sun: 11:00 AM - 11:00 PM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(IceCream, \"l1+aFM+OMMqKMzOZa3OfOyaM5rM=\");\n_c = IceCream;\nexport default IceCream;\nvar _c;\n$RefreshReg$(_c, \"IceCream\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Cart","jsxDEV","_jsxDEV","Fragment","_Fragment","IceCream","_s","selectedFlavors","setSelectedFlavors","flavors","name","src","imageClass","textClass","selectedFlavorsTop","setSelectedFlavorsTop","selectedFlavorsBox","document","getElementById","slideTop","querySelector","offsetTop","maxTop","clientHeight","handleScroll","scrollTop","window","scrollY","addEventListener","removeEventListener","toggleFlavor","flavorName","index","indexOf","length","prevSelectedFlavors","alert","filter","flavor","confirmSelection","updateCartItemCount","openCart","confirm","clearSelection","cartItemCount","setCartItemCount","count","isCartOpen","setIsCartOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","class","map","className","onClick","alt","id","style","top","itemCount","_c","$RefreshReg$"],"sources":["/Users/rodneydaniel/git/E-Commerce-Platform/src/Components/IceCream/IceCream.js"],"sourcesContent":["import \"./IceCream.css\"\nimport React, { useState, useEffect } from 'react';\nimport Navbar from \"../Navbar/Navbar\";\nimport Cart from \"../Cart/Cart\";\n\nfunction IceCream(){\n\n    const [selectedFlavors, setSelectedFlavors] = useState([]);\n\n    const flavors = [\n        { name: 'Vanilla', src: '../../../assets/vanilla.jpeg', imageClass: 'imv', textClass: 'image-textv' },\n        { name: 'Chocolate', src: './assets/chocolate.jpeg', imageClass: 'imchoco', textClass: 'image-textcho' },\n        { name: 'Strawberry', src: '/assets/strawberry.jpeg', imageClass: 'imstraw', textClass: 'image-textstraw' },\n        { name: 'Rocky Road', src: '../assets/rockyroad.jpeg', imageClass: 'imRR', textClass: 'image-textRR'},\n        { name: 'Cookies & Cream', src: '../assets/cookiescream.jpeg', imageClass: 'imCCr', textClass: 'image-textCCr'},\n        { name: 'Cookie Dough', src: '../../assets/cookiedough.jpeg', imageClass: 'imCD', textClass: 'image-textCD'},\n        { name: 'Dulce de Leche', src: '/assets/dulce.jpeg', imageClass: 'imDDL', textClass: 'image-textDDL'},\n        { name: 'Caramel Cone', src: '/assets/CaraCone.jpeg', imageClass: 'imCC', textClass: 'image-textCC'},\n        { name: 'Pralines & Cream', src: '/assets/Praline.jpeg', imageClass: 'imPnC', textClass: 'image-textPnC'},\n        { name: 'Mint Chip', src: '/assets/mint.jpeg', imageClass: 'imMC', textClass: 'image-textMC'},\n        { name: 'Midnight Cookies & Cream', src: '/assets/Midnight.jpeg', imageClass: 'imMCC', textClass: 'image-textMCC'},\n        { name: 'Belgian Chocolate', src: '/assets/belgianchoco.jpeg', imageClass: 'imBC', textClass: 'image-textBC'},\n        { name: 'Brownies A La Mode', src: '/assets/brownie.jpeg', imageClass: 'imBALM', textClass: 'image-textBALM'},\n        { name: 'Butter Pecan', src: '/assets/butterpecan.jpeg', imageClass: 'imBP', textClass: 'image-textBP'},\n        { name: 'Vanilla Swiss Almond', src: '/assets/VanillaSA.jpeg', imageClass: 'imVSA', textClass: 'image-textVSA'},\n        { name: 'Coffee', src: '/assets/coffee.jpeg', imageClass: 'imCoff', textClass: 'image-textCoff'},\n        { name: 'Coffee Chip', src: '/assets/coffeechip.jpeg', imageClass: 'imCoffChip', textClass: 'image-textCoffChip'},\n        { name: 'Pineapple Coconut', src: 'pineapplecoco.jpeg', imageClass: 'imPC', textClass: 'image-textPC' },\n        { name: 'Irish Cream Brownie', src: 'irishcream.png', imageClass: 'imICB', textClass: 'image-textICB' },\n        { name: 'Vanilla Chocolate Chip', src: 'vanillachocochip.jpeg', imageClass: 'imVCC', textClass: 'image-textVCC' },\n        { name: 'Rum Raisin', src: 'rumraisin.jpeg', imageClass: 'imRumR', textClass: 'image-textRumR' },\n        { name: 'Pistachio', src: 'pistachio.jpeg', imageClass: 'imPist', textClass: 'image-textPist' },\n        { name: 'Chocolate Peanut Butter Pretzel', src: 'CPBP.png', imageClass: 'imCPBP', textClass: 'image-textCPBP' },\n        { name: 'White Chocolate Raspberry', src: 'WCR.jpeg', imageClass: 'imWCR', textClass: 'image-textWCR' },\n        { name: 'Sea Salt Caramel Truffle', src: 'IMG-0505.JPG', imageClass: 'imSSCT', textClass: 'image-textSSCT' },\n        \n        ];\n\n        const [selectedFlavorsTop, setSelectedFlavorsTop] = useState(0);\n\n        useEffect(() => {\n            const selectedFlavorsBox = document.getElementById(\"selected-flavors\"); //gets id of selected flavor\n            const slideTop = document.querySelector(\".icparallax-2\").offsetTop;\n            //.offsetTop is a property that returns the distance from the top of the element's parent container to the top of the element itself.\n            //The result of this line is stored in the slideTop variable, \n            //representing the vertical position of the top of the second parallax section.\n            const maxTop = slideTop + document.querySelector(\".icparallax-2\").clientHeight - selectedFlavorsBox.clientHeight;\n            //clientheight is the height of the parallax 2 section\n            //so when you subtract it by the height of the boxes.height\n            //you get the maximum scroll position\n    \n\n            //functions in javascript often have constant variables assigned to them instead \n            const handleScroll = () => {\n                const scrollTop = window.scrollY;\n                //current scroll position of the user\n                if (scrollTop >= slideTop && scrollTop <= maxTop) \n                // checks if the user's scroll position is within the section where you want the selected flavors box to move.\n                {\n                    //If the scroll position is within the desired range, this line updates the selectedFlavorsTop state variable.\n                    //The value being set is the difference between the current scroll position (scrollTop) \n                    //and the starting position of the parallax section (slideTop).\n                    setSelectedFlavorsTop(scrollTop - slideTop); //\n                }\n            };\n    \n            window.addEventListener(\"scroll\", handleScroll); //when the user scrolls the above thing will happen\n    \n            return () => {\n                window.removeEventListener(\"scroll\", handleScroll); //preventing memory leaks\n            };\n        }, []);\n\n        const toggleFlavor = (flavorName) => {\n            const index = selectedFlavors.indexOf(flavorName);\n            // getting the index of the clicked flavor in the selectedFlavors array\n            if (index === -1) \n            //if the flavor is not already selected, because its not in the array yet\n            {\n                if (selectedFlavors.length < 2) \n                {\n                    setSelectedFlavors(prevSelectedFlavors => [...prevSelectedFlavors, flavorName]);\n                    //creates a new array that includes the previous selected flavors and the newly selected flavor.\n                } \n                else {\n                    // Show a message saying the user can't select more than two flavors\n                    alert(\"You can only select up to two flavors.\");\n                }\n            } \n            else {\n                setSelectedFlavors(prevSelectedFlavors => prevSelectedFlavors.filter(flavor => flavor !== flavorName));\n                //the .filter() makes a new array, \n                // (flavor => flavor !== flavorName) checks if each flavor is not equal to flavorName.\n                \n            }\n            //this else makes the flavor get unclicked\n        };\n\n        const confirmSelection = (updateCartItemCount, openCart) => {\n            if (selectedFlavors.length === 0) {\n              alert(\"You need to select at least one flavor.\");\n            } else if (selectedFlavors.length === 1) {\n              if (window.confirm(\"Are you sure you only want one flavor?\")) {\n                // Perform any necessary actions for one flavor selection\n              }\n            } else if (selectedFlavors.length === 2) {\n              if (window.confirm(\"Are you sure you want these two flavors?\")) {\n                // Perform any necessary actions for two flavor selection\n              }\n            }\n          \n            // Update the cart count\n            updateCartItemCount(selectedFlavors.length);\n          \n            // Open the cart when a selection is confirmed\n            openCart();\n          };\n          \n        \n\n        //The window.confirm method is a built-in JavaScript function\n        // that displays a confirmation dialog box with a message and two buttons: \"OK\" and \"Cancel.\"\n\n        const clearSelection = () => {\n            setSelectedFlavors([]); // Clear the selected flavors array\n          };\n\n\n        // State to track the number of items in the cart\n        const [cartItemCount, setCartItemCount] = useState(0);\n\n        // updating cart count\n        const updateCartItemCount = (count) => {\n            setCartItemCount(count);\n        };\n\n        const [isCartOpen, setIsCartOpen] = useState(false); // State to manage cart visibility\n\n  \n\n        const openCart = () => {\n            setIsCartOpen(true);\n        };\n        \n\n    return(\n    <>\n        \n        <Navbar/>\n\n        <div class=\"icparallax-1\">\n\n            <div class=\"icparallax-content\">\n                <h1>We have many different flavors to choose from!</h1>\n                <h2>Click on a flavor to get started!</h2>\n                <h4>(Unclick to remove them)</h4>\n            </div>\n        </div>\n\n        <div class=\"icparallax-2\">\n            <div class=\"image-grid\">\n                {flavors.map((flavor,index) => (\n                    <div key = {index} className=\"image-with-text\" onClick={() => toggleFlavor(flavor.name)}>\n                        <img src={flavor.src} className={flavor.imageClass} alt={`Image of ${flavor.name}`} />\n                        <p className={flavor.textClass}>{flavor.name}</p>\n                    </div>\n                ))}\n            </div> \n           \n\n            <div id=\"selected-flavors\" style={{ top: `${selectedFlavorsTop}px` }}>\n            {/* top is a css property mean to determine the distance from the top edge of the element's containing block */}\n            {/* px specifies pixels */}\n                <h2>Selected Flavors:</h2>\n                <ul id=\"flavor-list\">\n                    {selectedFlavors.map((flavor, index) => (\n                        <li key={index}>{flavor}</li>\n                    ))}\n                </ul>\n                <button id=\"confirm-button\" onClick={() => confirmSelection(updateCartItemCount, openCart)}>\n                    Confirm Selection\n                </button>\n                <button id=\"clear-button\" onClick={clearSelection}>\n                    Clear All Flavors\n                </button>\n            </div>\n\n            {isCartOpen && <Cart itemCount={cartItemCount} />}\n\n           \n\n           \n                \n        </div>\n\n        \n\n        <div class=\"icparallax-last\">\n            <div class=\"icpara3-content\">\n                <h2>Contact Us</h2>\n                <p>Address: 1306 2nd Avenue, Manhattan, New York</p>\n                <p>Email: info@haagendazs.com</p>\n                <p>Phone: +1 (646) 484 5897</p>\n                <p>Opening Hours: Mon-Sun: 11:00 AM - 11:00 PM</p>\n            </div>\n        </div>\n\n\n\n    </>\n\n    );\n}\n\nexport default IceCream;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}